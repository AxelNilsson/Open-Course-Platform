{"version":3,"sources":["Home.tsx","Support.tsx","Server.tsx","Ticket.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Home","useState","modalActive","setModalActive","useCustomDomain","setUseCustomDomain","serverCount","setServerCount","servers","setServers","useEffect","newServers","id","name","url","status","undefined","length","className","onClick","map","server","index","href","width","height","viewBox","xmlns","d","fill","htmlFor","type","placeholder","defaultChecked","onChange","Support","Server","useParams","Ticket","App","ticketsCount","setTicketsCount","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4db4bb82.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface Server {\n    id: string,\n    name: string;\n    url: string;\n    status: string;\n}\n\nfunction Home() {\n    const [modalActive, setModalActive] = useState<boolean>(false);\n    const [useCustomDomain, setUseCustomDomain] = useState<boolean>(false);\n    const [serverCount, setServerCount] = useState<number>(0);\n    const [servers, setServers] = useState<Array<Server>>();\n\n\n    function updateUseCustomDomain() {\n        setUseCustomDomain(!useCustomDomain)\n    }\n    function openModal() {\n        setModalActive(true)\n    }\n\n    function closeModal() {\n        setModalActive(false)\n    }\n\n    useEffect(() => {\n        let newServers: Array<Server> = [{\n            id: \"0\",\n            name: \"ClubCoding\",\n            url: \"clubcoding.com\",\n            status: \"running\",\n        }, {\n            id: \"0\",\n            name: \"Course\",\n            url: \"course.ocp-host.com\",\n            status: \"running\",\n        },\n        {\n            id: \"0\",\n            name: \"HÃ¶gskoleprovskursen\",\n            url: \"hogskoleprovskursen.se\",\n            status: \"running\",\n        }];\n        setServers(newServers);\n        if (newServers !== undefined) {\n            setServerCount(newServers?.length);\n        }\n    }, []);\n    return (\n        <main className=\"container mx-auto px-32 pt-4\">\n            <div className=\"flex flex-wrap p-4\">\n                <div className=\"w-1/3 h-12\">\n                    <h2 className=\"text-3xl font-thin\">Active servers</h2>\n                </div>\n                <div className=\"w-1/3\"></div>\n                <div className=\"w-1/3 h-12 text-right\">\n                    <button onClick={openModal} className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:text-gray-900 hover:bg-blue-700\">\n                        Create new Server\n                </button>\n                </div>\n            </div>\n            <div className=\"flex flex-wrap px-4 pb-4\">\n                {serverCount === 0 ? (\n                    <div className=\"w-full\">\n                        <div className=\"card p-4 bg-white shadow flex\">\n                            <div className=\"flex-grow\">\n                                <div className=\"flex\">\n                                    <div>\n                                        <h2 className=\"text-gray-700 text-xl font-thin\">You currently have no servers.</h2>\n                                        <h2 className=\"text-gray-900 text-l\">Why don't you create one?</h2>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                        <div className=\"w-full\">\n                            {servers?.map((server, index) => {\n                                if (index % 2 === 0) {\n                                    return (\n                                        <a href={\"/servers/\" + server.id} className=\"card p-4 bg-white shadow flex\">\n                                            <div className=\"flex-grow\">\n                                                <div className=\"flex\">\n                                                    <svg className=\"m-1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20 13H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zM7 19c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM20 3H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zM7 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\" /></svg>\n                                                    <div>\n                                                        <h2 className=\"text-gray-700 text-xl\">{server.name}</h2>\n                                                        <a href={\"http://\" + server.url} className=\"text-gray-700 text-sm\">{server.url}</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"content-center flex-wrap my-2\">\n                                                <button className=\"bg-blue-500 text-gray-800 py-1 px-4 rounded-full text-sm font-normal\">{server.status}</button>\n                                            </div>\n                                        </a>\n                                    )\n                                } else {\n                                    return (\n                                        <a href={\"/servers/\" + server.id} className=\"card p-4 bg-gray-100 shadow flex\">\n                                            <div className=\"flex-grow\">\n                                                <div className=\"flex\">\n                                                    <svg className=\"m-1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20 13H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zM7 19c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM20 3H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zM7 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\" /></svg>\n                                                    <div>\n                                                        <h2 className=\"text-gray-700 text-xl\">{server.name}</h2>\n                                                        <a href={\"http://\" + server.url} className=\"text-gray-700 text-sm\">{server.url}</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"content-center flex-wrap my-2\">\n                                                <button className=\"bg-blue-500 text-gray-800 py-1 px-4 rounded-full text-sm font-normal\">{server.status}</button>\n                                            </div>\n                                        </a>\n                                    )\n                                }\n                            })}\n                        </div>\n                    )\n                }\n\n            </div>\n            <div className={`modal fixed w-full h-full top-0 left-0 flex items-center justify-center ${modalActive ? \"\" : \"opacity-0 pointer-events-none\"}`}>\n                <div onClick={closeModal} className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\"></div>\n\n                <div className=\"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n\n                    <div className=\"modal-content py-4 text-left\">\n                        <p className=\"text-2xl text-center\">Create new Server</p>\n                        <hr className=\"my-2 mx-32\"></hr>\n                        <form className=\"px-8 pb-2 mb-4\">\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                                    Website Name\n                                </label>\n                                <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"Website Name\" />\n                            </div>\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n                                    Admin Username\n                                </label>\n                                <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Admin Username\" />\n                            </div>\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\n                                    Admin Password\n                                </label>\n                                <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"password\" type=\"password\" placeholder=\"Admin Password\" />\n                            </div>\n                            <div className=\"mb-4\">\n                                <div className=\"md:w-1/3\"></div>\n                                <label className=\"md:w-2/3 block text-gray-700 font-bold\">\n                                    <input className=\"mr-2 leading-tight\" type=\"checkbox\" defaultChecked={useCustomDomain} onChange={updateUseCustomDomain} />\n                                    <span className=\"text-sm\">\n                                        Use a custom domain\n                                    </span>\n                                </label>\n                            </div>\n                            {useCustomDomain &&\n                                <div className=\"mb-4\">\n                                    <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"domain\">\n                                        Custom Domain\n                                    </label>\n                                    <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"domain\" type=\"text\" placeholder=\"Custom Domain\" />\n                                </div>\n                            }\n                            <div className=\"flex items-center justify-between\">\n                                <button className=\"w-full bg-blue-500 hover:bg-blue-700 text-white font-bold p-3 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n                                    Create server\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </main>\n    );\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\n\ninterface Ticket {\n    id: string,\n    name: string;\n    status: string;\n}\n\nfunction Support() {\n    const [serverCount, setServerCount] = useState<number>(0);\n    const [servers, setServers] = useState<Array<Ticket>>();\n    const [modalActive, setModalActive] = useState<boolean>(false);\n\n    function openModal() {\n        setModalActive(true)\n    }\n\n    function closeModal() {\n        setModalActive(false)\n    }\n\n    useEffect(() => {\n        let newServers: Array<Ticket> = [{\n            id: \"hej\",\n            name: \"ClubCoding\",\n            status: \"open\",\n        }, {\n            id: \"hej\",\n            name: \"Course\",\n            status: \"closed\",\n        },\n        {\n            id: \"hej\",\n            name: \"HÃ¶gskoleprovskursen\",\n            status: \"closed\",\n        }];\n        setServers(newServers);\n        if (newServers !== undefined) {\n            setServerCount(newServers?.length);\n        }\n    }, []);\n    return (\n        <main className=\"container mx-auto px-32 pt-4\">\n            <div className=\"flex flex-wrap p-4\">\n                <div className=\"w-1/3 h-12\">\n                    <h2 className=\"text-3xl font-thin\">Active tickets</h2>\n                </div>\n                <div className=\"w-1/3\"></div>\n                <div className=\"w-1/3 h-12 text-right\">\n                    <button onClick={openModal} className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:text-gray-900 hover:bg-blue-700\">\n                        Create new ticket\n                </button>\n                </div>\n            </div>\n            <div className=\"flex flex-wrap px-4 pb-4\">\n                {serverCount === 0 ? (\n                    <div className=\"w-full\">\n                        <div className=\"card p-4 bg-white shadow flex\">\n                            <div className=\"flex-grow\">\n                                <div className=\"flex\">\n                                    <div>\n                                        <h2 className=\"text-gray-700 text-xl font-thin\">You currently have no servers.</h2>\n                                        <h2 className=\"text-gray-900 text-l\">Why don't you create one?</h2>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                        <div className=\"w-full\">\n                            {servers?.map((server, index) => {\n                                if (index % 2 === 0) {\n                                    return (\n                                        <a href={\"/tickets/\" + server.id} className=\"card p-4 bg-white shadow flex\">\n                                            <div className=\"flex-grow\">\n                                                <div className=\"flex\">\n                                                    <svg className=\"m-1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\" /></svg>\n                                                    <div>\n                                                        <a href={\"/tickets/\" + server.id} className=\"text-gray-700 text-xl\">{server.name}</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"content-center flex-wrap my-2\">\n                                                <button className=\"bg-blue-500 text-gray-800 py-1 px-4 rounded-full text-sm font-normal\">{server.status}</button>\n                                            </div>\n                                        </a>\n                                    )\n                                } else {\n                                    return (\n                                        <a href={\"/servers/\" + server.id} className=\"card p-4 bg-gray-100 shadow flex\">\n                                            <div className=\"flex-grow\">\n                                                <div className=\"flex\">\n                                                    <svg className=\"m-1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\" /></svg>\n                                                    <div>\n                                                        <a href={server.id} className=\"text-gray-700 text-xl\">{server.name}</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"content-center flex-wrap my-2\">\n                                                <button className=\"bg-blue-500 text-gray-800 py-1 px-4 rounded-full text-sm font-normal\">{server.status}</button>\n                                            </div>\n                                        </a>\n                                    )\n                                }\n                            })}\n                        </div>\n                    )\n                }\n\n            </div>\n            <div className={`modal fixed w-full h-full top-0 left-0 flex items-center justify-center ${modalActive ? \"\" : \"opacity-0 pointer-events-none\"}`}>\n                <div onClick={closeModal} className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\"></div>\n\n                <div className=\"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n\n                    <div className=\"modal-content py-4 text-left\">\n                        <p className=\"text-2xl text-center\">Create new Server</p>\n                        <hr className=\"my-2 mx-32\"></hr>\n                        <form className=\"px-8 pb-2 mb-4\">\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                                    Title\n                                </label>\n                                <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"Title\" />\n                            </div>\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"text\">\n                                    Text\n                                </label>\n                                <textarea className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" placeholder=\"Text\"></textarea>\n                            </div>\n                            <div className=\"flex items-center justify-between\">\n                                <button className=\"w-full bg-blue-500 hover:bg-blue-700 text-white font-bold p-3 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n                                    Create ticket\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </main>\n    );\n}\n\nexport default Support;","import React, { useEffect } from 'react';\nimport { useParams } from \"react-router\";\n\nfunction Server() {\n    let { id } = useParams();\n    let name = \"Club Coding\";\n\n    function GetServerByID(id: string) {\n        return;\n    }\n\n    useEffect(() => {\n        if (id !== undefined) {\n            GetServerByID(id);\n        }\n    }, []);\n\n    return (\n        <main className=\"container mx-auto px-32 pt-4\">\n            <div className=\"flex flex-wrap p-4\">\n                <div className=\"w-1/3 h-12\">\n                    <h2 className=\"text-2xl\">{name}</h2>\n                </div>\n            </div>\n            <div className=\"shadow-xl mb-4 mx-4\">\n                <div className=\"bg-white p-4 flex\">\n                    <div>\n                        <h2 className=\"font-semibold text-gray-900 text-xl\">Name</h2>\n                        <h2 className=\"font-semibold text-gray-900 text-xl\">Domain</h2>\n                        <h2 className=\"font-semibold text-gray-900 text-xl\">Status</h2>\n                        <h2 className=\"font-semibold text-gray-900 text-xl\">Created</h2>\n                    </div>\n                    <div className=\"ml-16\">\n                        <h2 className=\"font-thin text-gray-900 text-xl\">Club Coding</h2>\n                        <h2 className=\"font-thin text-gray-900 text-xl\">clubcoding.com</h2>\n                        <h2 className=\"font-thin text-gray-900 text-xl\">Running</h2>\n                        <h2 className=\"font-thin text-gray-900 text-xl\">January 29th, 2019</h2>\n                    </div>\n                </div>\n                <div className=\"bg-gray-100 p-4\">\n                    <div>\n                        <a className=\"bg-red-500 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded\">Stop</a>\n                        <a className=\"bg-orange-500 hover:bg-orange-700 text-white font-semibold py-2 px-4 rounded ml-4\">Restart</a>\n                        <a className=\"bg-red-700 hover:bg-red-900 text-white font-semibold py-2 px-4 rounded ml-4\">Delete</a>\n                    </div>\n                </div>\n            </div>\n        </main>\n    );\n}\n\nexport default Server;","import React, { useEffect } from 'react';\nimport { useParams } from \"react-router\";\n\nfunction Ticket() {\n    let { id } = useParams();\n    let name = \"Club Coding\";\n\n    function GetTicketByID(id: string) {\n        return;\n    }\n\n    useEffect(() => {\n        if (id !== undefined) {\n            GetTicketByID(id);\n        }\n    }, []);\n\n    return (\n        <main className=\"container mx-auto px-32 pt-4\">\n            <div className=\"flex flex-wrap p-4\">\n                <div className=\"w-1/3 h-12\">\n                    <h2 className=\"text-2xl\">{id}</h2>\n                </div>\n            </div>\n            <div className=\"shadow mb-4 mx-4\">\n                <div className=\"bg-white p-4 flex\">\n                    <p>Hej hej</p>\n                </div>\n            </div>\n            <div className=\"shadow mb-4 mx-4\">\n                <div className=\"bg-white p-4 flex\">\n                    <p>Hej hej</p>\n                </div>\n            </div>\n            <div className=\"shadow mb-4 mx-4 bg-white pb-8\">\n                <h2 className=\"text-l font-thin pl-4 pt-4\">Answer ticket</h2>\n                <textarea className=\"w-full mb-4\"></textarea>\n                <a className=\"bg-orange-700 py-4 px-8 text-white hover:bg-orange-900 ml-4 mb-4 rounded\" href=\"#hej\">Submit answer</a>\n            </div>\n        </main>\n    );\n}\n\nexport default Ticket;","import React, { useState, useEffect } from 'react';\nimport Home from \"./Home\";\nimport Support from \"./Support\";\nimport Server from \"./Server\";\nimport Ticket from \"./Ticket\";\n\nimport { Route, Switch } from 'react-router-dom';\n\ninterface Server {\n  id: string,\n  name: string;\n  url: string;\n  status: string;\n}\n\n\nfunction App() {\n  const [serverCount, setServerCount] = useState<number>(0);\n  const [ticketsCount, setTicketsCount] = useState<number>(0);\n  const [dropdownActive, setDropdownActive] = useState<boolean>(false);\n\n  function changeDropdown() {\n    setDropdownActive(!dropdownActive)\n  }\n\n  useEffect(() => {\n    let newServers: Array<any> = [{\n      id: 0,\n      name: \"ClubCoding\",\n      url: \"clubcoding.com\",\n      status: \"running\",\n    }, {\n      id: 0,\n      name: \"Course\",\n      url: \"course.ocp-host.com\",\n      status: \"running\",\n    },\n    {\n      id: 0,\n      name: \"HÃ¶gskoleprovskursen\",\n      url: \"hogskoleprovskursen.se\",\n      status: \"running\",\n    }];\n    if (newServers !== undefined) {\n      setServerCount(newServers?.length);\n    }\n    setTicketsCount(0);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <nav className=\"container mx-auto px-32\">\n        <div className=\"flex items-center justify-between flex-wrap p-6\">\n          <div className=\"flex items-center flex-shrink-0 mr-6\">\n            <svg className=\"text-orange-600 fill-current h-8 w-8 mr-2\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\" /></svg>\n            <span className=\"font-semibold text-xl tracking-tight\">OpenCourseWare <span className=\"text-orange-600 font-bold\">Host</span></span>\n          </div>\n          <div className=\"block lg:hidden\">\n            <button className=\"flex items-center px-3 py-2 border rounded text-gray-700 border-teal-400 hover:border-white\">\n              <svg className=\"fill-current h-3 w-3\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><title>Menu</title><path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" /></svg>\n            </button>\n          </div>\n          <div className=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto\">\n            <div className=\"lg:flex-grow\">\n            </div>\n            <div>\n              <a href=\"/\" className=\"text-gray-600 inline-block text-sm px-4 py-2 leading-none border rounded  border-white hover:border-transparent hover:text-gray-900 mt-4 lg:mt-0\">\n                Servers <span className=\"bg-orange-700 p-1 rounded text-white text-xs ml-1\">{serverCount}</span>\n              </a>\n              <a href=\"/support\" className=\"text-gray-600 inline-block text-sm px-4 py-2 leading-none border rounded  border-white hover:border-transparent hover:text-gray-900 mt-4 lg:mt-0\">\n                Support <span className=\"bg-orange-700 p-1 rounded text-white text-xs ml-1\">{ticketsCount}</span>\n              </a>\n              <a href=\"/support\" className=\"text-gray-600 inline-block text-sm px-4 py-2 leading-none border rounded  border-white hover:border-transparent hover:text-gray-900 mt-4 lg:mt-0\">\n                Log out\n              </a>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <hr />\n      <div className=\"h-screen w-full bg-gray-100\">\n        <Switch>\n          <Route exact path=\"/\" render={() => (\n            <Home />\n          )} />\n          <Route exact path=\"/support\" render={() => (\n            <Support />\n          )} />\n          <Route exact path=\"/servers/:id\" render={() => (\n            <Server />\n          )} />\n          <Route exact path=\"/tickets/:id\" render={() => (\n            <Ticket />\n          )} />\n        </Switch>\n        <footer className=\"text-center text-gray-700\">\n          &copy; 2019 OpenCourseWare Host\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/tailwind.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}